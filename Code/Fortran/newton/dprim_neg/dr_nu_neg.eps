%!PS-Adobe-2.0 EPSF-2.0
%%Title: dr_nu_neg.eps
%%Creator: gnuplot 5.2 patchlevel 4
%%CreationDate: Thu Aug 23 12:11:02 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dr_nu_neg.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 4)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Aug 23 12:11:02 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1225 1164 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 1164 M
[ [(Times-Roman) 250.0 0.0 true true 0 (-0.6)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
/vshift -83 def
1.000 UL
LTb
LCb setrgbcolor
1225 1509 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 1509 M
[ [(Times-Roman) 250.0 0.0 true true 0 (-0.4)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 1854 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 1854 M
[ [(Times-Roman) 250.0 0.0 true true 0 (-0.2)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2199 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 2199 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2545 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 2545 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0.2)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2890 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 2890 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0.4)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3235 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 3235 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0.6)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3580 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 3580 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0.8)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3925 M
63 0 V
2698 0 R
-63 0 V
stroke
1075 3925 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1281 1164 M
0 31 V
0 2730 R
0 -31 V
73 -2730 R
0 31 V
0 2730 R
0 -31 V
64 -2730 R
0 31 V
0 2730 R
0 -31 V
58 -2730 R
0 63 V
0 2698 R
0 -63 V
stroke
1476 914 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 1)]
] -83.3 MCshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1854 1164 M
0 31 V
0 2730 R
0 -31 V
2075 1164 M
0 31 V
0 2730 R
0 -31 V
2231 1164 M
0 31 V
0 2730 R
0 -31 V
2353 1164 M
0 31 V
0 2730 R
0 -31 V
99 -2730 R
0 31 V
0 2730 R
0 -31 V
84 -2730 R
0 31 V
0 2730 R
0 -31 V
73 -2730 R
0 31 V
0 2730 R
0 -31 V
64 -2730 R
0 31 V
0 2730 R
0 -31 V
58 -2730 R
0 63 V
0 2698 R
0 -63 V
stroke
2731 914 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 10)]
] -83.3 MCshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3109 1164 M
0 31 V
0 2730 R
0 -31 V
3330 1164 M
0 31 V
0 2730 R
0 -31 V
3487 1164 M
0 31 V
0 2730 R
0 -31 V
3608 1164 M
0 31 V
0 2730 R
0 -31 V
3708 1164 M
0 31 V
0 2730 R
0 -31 V
84 -2730 R
0 31 V
0 2730 R
0 -31 V
72 -2730 R
0 31 V
0 2730 R
0 -31 V
65 -2730 R
0 31 V
0 2730 R
0 -31 V
57 -2730 R
0 63 V
0 2698 R
0 -63 V
stroke
3986 914 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 100)]
] -83.3 MCshow
/Times-Roman findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 3925 N
0 -2761 V
2761 0 V
0 2761 V
-2761 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
225 2544 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 250.0 0.0 true true 0 (w)]
[(Times-Roman) 250.0 0.0 true true 0 (/)]
[(Symbol) 250.0 0.0 true true 0 (w)]
[(Times-Roman) 200.0 -75.0 true true 0 (T)]
] -58.3 MCshow
grestore
/Times-Roman findfont 250 scalefont setfont
LTb
LCb setrgbcolor
2605 539 M
[ [(Symbol) 250.0 0.0 true true 0 (n)]
[(Times-Roman) 200.0 -75.0 true true 0 (ei)]
[(Times-Roman) 250.0 0.0 true true 0 (/)]
[(Symbol) 250.0 0.0 true true 0 (w)]
[(Times-Roman) 200.0 -75.0 true true 0 (T)]
] -58.3 MCshow
/Times-Roman findfont 250 scalefont setfont
LTb
LCb setrgbcolor
2605 4550 M
[ [(Times-Roman) 250.0 0.0 true true 0 (Numerical solution of Eq.\(61\) of Zocco\(2015\))]
] -83.3 MCshow
/Times-Roman findfont 250 scalefont setfont
2605 4300 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( )]
[(Symbol) 250.0 0.0 true true 0 (D)]
[(Times-Roman) 250.0 0.0 true true 0 (a'=-4.01)]
] -83.3 MCshow
/Times-Roman findfont 250 scalefont setfont
% Begin plot #1
2.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C LCb setrgbcolor
6086 3800 M
[ [(Symbol) 250.0 0.0 true true 0 (w)]
[(Times-Roman) 200.0 -75.0 true true 0 (r)]
[(Times-Roman) 250.0 0.0 true true 0 ( of Eq.\(61\))]
] -58.3 MRshow
/Times-Roman findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C 1225 3122 Circle
1824 3166 Circle
2102 3195 Circle
2286 3219 Circle
2423 3239 Circle
2532 3256 Circle
2623 3272 Circle
2701 3287 Circle
2769 3300 Circle
2830 3313 Circle
2885 3325 Circle
2934 3336 Circle
2980 3347 Circle
3022 3357 Circle
3061 3367 Circle
3097 3376 Circle
3131 3386 Circle
3163 3394 Circle
3193 3403 Circle
3222 3411 Circle
3249 3419 Circle
3275 3427 Circle
3300 3434 Circle
3324 3441 Circle
3346 3449 Circle
3368 3456 Circle
3389 3462 Circle
3409 3469 Circle
3429 3476 Circle
3448 3482 Circle
3466 3488 Circle
3483 3494 Circle
3500 3500 Circle
3517 3506 Circle
3533 3512 Circle
3549 3518 Circle
3564 3523 Circle
3578 3529 Circle
3593 3534 Circle
3607 3539 Circle
3620 3545 Circle
3634 3550 Circle
3647 3555 Circle
3659 3560 Circle
3672 3565 Circle
3684 3570 Circle
3696 3574 Circle
3707 3579 Circle
3719 3584 Circle
3730 3588 Circle
3741 3593 Circle
3751 3597 Circle
3762 3602 Circle
3772 3606 Circle
3782 3611 Circle
3792 3615 Circle
3802 3619 Circle
3811 3623 Circle
3821 3628 Circle
3830 3632 Circle
3839 3636 Circle
3848 3640 Circle
3857 3644 Circle
3866 3648 Circle
3874 3652 Circle
3882 3655 Circle
3891 3659 Circle
3899 3663 Circle
3907 3667 Circle
3915 3671 Circle
3923 3674 Circle
3930 3678 Circle
3938 3682 Circle
3945 3685 Circle
3953 3689 Circle
3960 3692 Circle
3967 3696 Circle
3974 3699 Circle
3981 3703 Circle
6567 3800 Circle
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
6086 3550 M
[ [(Symbol) 250.0 0.0 true true 0 (g)]
[(Times-Roman) 250.0 0.0 true true 0 ( of Eq.\(61\))]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 1225 2143 Crs
1824 2105 Crs
2102 2081 Crs
2286 2063 Crs
2423 2047 Crs
2532 2033 Crs
2623 2021 Crs
2701 2010 Crs
2769 2000 Crs
2830 1991 Crs
2885 1982 Crs
2934 1974 Crs
2980 1967 Crs
3022 1959 Crs
3061 1952 Crs
3097 1946 Crs
3131 1939 Crs
3163 1933 Crs
3193 1927 Crs
3222 1922 Crs
3249 1916 Crs
3275 1911 Crs
3300 1906 Crs
3324 1901 Crs
3346 1896 Crs
3368 1891 Crs
3389 1886 Crs
3409 1882 Crs
3429 1877 Crs
3448 1873 Crs
3466 1869 Crs
3483 1865 Crs
3500 1861 Crs
3517 1857 Crs
3533 1853 Crs
3549 1849 Crs
3564 1845 Crs
3578 1842 Crs
3593 1838 Crs
3607 1835 Crs
3620 1831 Crs
3634 1828 Crs
3647 1825 Crs
3659 1821 Crs
3672 1818 Crs
3684 1815 Crs
3696 1812 Crs
3707 1809 Crs
3719 1805 Crs
3730 1802 Crs
3741 1799 Crs
3751 1797 Crs
3762 1794 Crs
3772 1791 Crs
3782 1788 Crs
3792 1785 Crs
3802 1782 Crs
3811 1780 Crs
3821 1777 Crs
3830 1774 Crs
3839 1772 Crs
3848 1769 Crs
3857 1767 Crs
3866 1764 Crs
3874 1761 Crs
3882 1759 Crs
3891 1757 Crs
3899 1754 Crs
3907 1752 Crs
3915 1749 Crs
3923 1747 Crs
3930 1745 Crs
3938 1742 Crs
3945 1740 Crs
3953 1738 Crs
3960 1735 Crs
3967 1733 Crs
3974 1731 Crs
3981 1729 Crs
6567 3550 Crs
% End plot #2
% Begin plot #3
2.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
6086 3300 M
[ [(Symbol) 250.0 0.0 true true 0 (w)]
[(Times-Roman) 200.0 -75.0 true true 0 (r)]
[(Times-Roman) 250.0 0.0 true true 0 (\(theo\))]
] -58.3 MRshow
/Times-Roman findfont 250 scalefont setfont
2.000 UL
LTb
LCa setrgbcolor
6236 3300 M
663 0 V
1225 3130 M
599 49 V
278 35 V
184 27 V
137 24 V
109 22 V
91 19 V
78 19 V
68 16 V
61 16 V
55 16 V
49 14 V
46 14 V
42 13 V
39 13 V
36 12 V
34 12 V
32 12 V
30 11 V
29 11 V
27 11 V
26 10 V
25 11 V
24 10 V
22 9 V
22 10 V
21 9 V
20 9 V
20 10 V
19 8 V
18 9 V
17 9 V
17 8 V
17 9 V
16 8 V
16 8 V
15 8 V
14 8 V
15 8 V
14 7 V
13 8 V
14 7 V
13 8 V
12 7 V
13 7 V
12 7 V
12 7 V
11 7 V
12 7 V
11 7 V
11 7 V
10 7 V
11 6 V
10 7 V
10 6 V
10 7 V
10 6 V
9 7 V
10 6 V
9 6 V
9 6 V
9 6 V
9 6 V
9 7 V
8 5 V
8 6 V
9 6 V
8 6 V
8 6 V
8 6 V
8 5 V
7 6 V
8 6 V
7 5 V
8 6 V
7 6 V
7 5 V
7 5 V
7 6 V
5 4 V
% End plot #3
% Begin plot #4
stroke
LTb
0.90 0.12 0.06 C LCb setrgbcolor
6086 3050 M
[ [(Symbol) 250.0 0.0 true true 0 (g)]
[(Times-Roman) 250.0 0.0 true true 0 (\(theo\))]
] -83.3 MRshow
/Times-Roman findfont 250 scalefont setfont
2.000 UL
LTb
0.90 0.12 0.06 C 6236 3050 M
663 0 V
1225 2132 M
599 -50 V
278 -34 V
184 -28 V
137 -24 V
109 -21 V
91 -20 V
78 -18 V
68 -17 V
61 -16 V
55 -15 V
49 -14 V
46 -14 V
42 -14 V
39 -12 V
36 -13 V
34 -12 V
32 -11 V
30 -12 V
29 -11 V
27 -10 V
26 -11 V
25 -10 V
24 -10 V
22 -10 V
22 -9 V
21 -10 V
20 -9 V
20 -9 V
19 -9 V
18 -9 V
17 -8 V
17 -9 V
17 -8 V
16 -8 V
16 -8 V
15 -8 V
14 -8 V
15 -8 V
14 -8 V
13 -7 V
14 -8 V
13 -7 V
12 -7 V
13 -8 V
12 -7 V
12 -7 V
11 -7 V
12 -7 V
11 -7 V
11 -6 V
10 -7 V
11 -7 V
10 -6 V
10 -7 V
10 -6 V
10 -7 V
9 -6 V
10 -6 V
9 -7 V
9 -6 V
9 -6 V
9 -6 V
9 -6 V
8 -6 V
8 -6 V
9 -6 V
8 -6 V
8 -5 V
8 -6 V
8 -6 V
7 -6 V
8 -5 V
7 -6 V
8 -5 V
7 -6 V
7 -5 V
7 -6 V
7 -5 V
5 -4 V
% End plot #4
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 3925 N
0 -2761 V
2761 0 V
0 2761 V
-2761 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
